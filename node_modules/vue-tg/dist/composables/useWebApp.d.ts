/// <reference types="telegram-web-app" />
export declare function useWebApp(): {
    initData: string;
    initDataUnsafe: WebAppInitData;
    version: string;
    platform: string;
    isVersionAtLeast: (version: string) => boolean;
    onEvent: {
        (eventType: "backButtonClicked" | "themeChanged" | "mainButtonClicked" | "settingsButtonClicked", eventHandler: () => void): void;
        (eventType: "popupClosed", eventHandler: (eventData: {
            button_id: string | null;
        }) => void): void;
        (eventType: "viewportChanged", eventHandler: (eventData: {
            isStateStable: boolean;
        }) => void): void;
        (eventType: "invoiceClosed", eventHandler: (eventData: {
            url: string;
            status: "cancelled" | "paid" | "failed" | "pending";
        }) => void): void;
        (eventType: "qrTextReceived", eventHandler: (eventData: {
            data: string;
        }) => void): void;
        (eventType: "clipboardTextReceived", eventHandler: (eventData: {
            data: string | null;
        }) => void): void;
        (eventType: "writeAccessRequested", eventHandler: (eventData: {
            status: "cancelled" | "allowed";
        }) => void): void;
        (eventType: "contactRequested", eventHandler: (eventData: {
            status: "sent" | "cancelled";
        }) => void): void;
    };
    sendData: (data: string) => void;
    ready: () => void;
    close: () => void;
    isReady: Readonly<import("vue").Ref<boolean>>;
    isPlatform: (name: string) => boolean;
    isPlatformUnknown: boolean;
    canSendData: boolean;
};
